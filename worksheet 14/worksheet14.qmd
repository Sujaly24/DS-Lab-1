---
title: "MTH208: Worksheet 14"
format: 
  pdf:
    documentclass: article
editor: visual
geometry: margin=1in
header-includes:
   - \usepackage{amsmath, amssymb, setspace}
   - \onehalfspacing
   - \usepackage{etoolbox} 
   - \makeatletter 
   - \preto{\@verbatim}{\topsep=3pt \partopsep=3pt } 
   - \makeatother
---

## More Shiny Apps

We will do more R Shiny Development today! Note, you may find it very useful for your projects to see the demos provided on this website (with code). <https://shiny.rstudio.com/gallery/#demos>

There are tutorials available on the shiny website. Go through this Tutorial page and the first 3-4 lessons. This page tells you about the different types of interactive options. <https://shiny.rstudio.com/tutorial/written-tutorial/lesson1/>

We will use the `gapminder` dataset in `library(gapminder)`. In case this library is not loaded in your machine, you can read the csv provided using `read.csv()` and convert to a tibble using function `as_tibble()` in library `tibble`. This dataset contains information on GDP per capita and population by country. We are going to create an interactive widget to analyze this dataset. Your goal will be to create a shiny app that looks eventually like this:

![](app_image.png)

This image has the following features:

-   A title
-   Choosing of continents on the side
-   Choosing years for which to plot in the second plot
-   Choosing the country to highlight in the second plot
-   A header for the main panel
-   Plot Number 1
-   Some text that presents the country within the chosen continents with the highest Life Expectancy in the selected year range.
-   Plot Number 2

We will need the following libraries:

```{r}
#| eval: false
library(ggplot2)
library(gapminder)
library(shiny)

# do ?gapminder to learn about the data
```

I give you code to make the two plots for the full dataset. For plot number 1 for the full dataset, the code is

```{r}
#| eval: false
# Plot Number 1

# Scatterplot with size = population
# and colour = country
# then changing opacity
# scale ang log scale
p <- ggplot(
  gapminder, 
  aes(x = gdpPercap, y = lifeExp, size = pop, colour = continent)
) +
  geom_point(show.legend = TRUE, alpha = 0.7) +
  scale_color_viridis_d() +
  scale_size(range = c(2, 12)) +
  scale_x_log10() +
  labs(x = "GDP per capita", y = "Life expectancy")
p
```

For plot number 2 for the full dataset, the code is:

```{r}
#| eval: false
# Plot Number 2

# year by lifeExp, grouped by country
# and colored by continent
p <- ggplot(gapminder,
           aes(year, lifeExp, group = country, color = continent)) + 
  geom_line() +
  labs(x = "Year", y = "Life Expectancy")
p
```
